[{"F:\\CodingBootcamp\\Mug-Store\\client\\src\\index.js":"1","F:\\CodingBootcamp\\Mug-Store\\client\\src\\App.js":"2","F:\\CodingBootcamp\\Mug-Store\\client\\src\\reportWebVitals.js":"3","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\index.js":"4","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\reportWebVitals.js":"5","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\App.js":"6","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\utils\\auth.js":"7","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\utils\\GlobalState.js":"8","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\pages\\Home.js":"9","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\pages\\UserDashboard.js":"10","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\components\\Nav.js":"11","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\pages\\Signup.js":"12","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\pages\\Login.js":"13","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\pages\\Create.js":"14","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\pages\\UpdateUser.js":"15","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\pages\\Success.js":"16","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\pages\\About.js":"17","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\pages\\OrderHistory.js":"18","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\utils\\reducers.js":"19","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\utils\\queries.js":"20","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\components\\UserInfo.js":"21","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\components\\PrevOrder.js":"22","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\components\\Cart\\index.js":"23","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\utils\\mutations.js":"24","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\components\\CustomizeProduct.js":"25","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\utils\\helpers.js":"26","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\utils\\actions.js":"27","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\components\\CartItem.js":"28","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\components\\CustomMug.js":"29"},{"size":570,"mtime":1669389001013,"results":"30","hashOfConfig":"31"},{"size":2290,"mtime":1669660124398,"results":"32","hashOfConfig":"31"},{"size":375,"mtime":1669229350274,"results":"33","hashOfConfig":"31"},{"size":551,"mtime":1669389216650,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":1669225670112,"results":"36","hashOfConfig":"35"},{"size":2144,"mtime":1669660310668,"results":"37","hashOfConfig":"35"},{"size":1406,"mtime":1669663022055,"results":"38","hashOfConfig":"35"},{"size":521,"mtime":1669650047737,"results":"39","hashOfConfig":"35"},{"size":666,"mtime":1669660086928,"results":"40","hashOfConfig":"35"},{"size":1527,"mtime":1669660086933,"results":"41","hashOfConfig":"35"},{"size":1992,"mtime":1669660086922,"results":"42","hashOfConfig":"35"},{"size":4771,"mtime":1669647912577,"results":"43","hashOfConfig":"35"},{"size":2202,"mtime":1669647912573,"results":"44","hashOfConfig":"35"},{"size":424,"mtime":1669650047732,"results":"45","hashOfConfig":"35"},{"size":5537,"mtime":1669660086931,"results":"46","hashOfConfig":"35"},{"size":1401,"mtime":1669650047734,"results":"47","hashOfConfig":"35"},{"size":2039,"mtime":1669660086925,"results":"48","hashOfConfig":"35"},{"size":1462,"mtime":1669662315942,"results":"49","hashOfConfig":"35"},{"size":1521,"mtime":1669319592490,"results":"50","hashOfConfig":"35"},{"size":971,"mtime":1669650047741,"results":"51","hashOfConfig":"35"},{"size":983,"mtime":1669660086923,"results":"52","hashOfConfig":"35"},{"size":1198,"mtime":1669652096045,"results":"53","hashOfConfig":"35"},{"size":2776,"mtime":1669660689459,"results":"54","hashOfConfig":"35"},{"size":2006,"mtime":1669660086936,"results":"55","hashOfConfig":"35"},{"size":9112,"mtime":1669660086920,"results":"56","hashOfConfig":"35"},{"size":2152,"mtime":1669660086935,"results":"57","hashOfConfig":"35"},{"size":468,"mtime":1669319592486,"results":"58","hashOfConfig":"35"},{"size":2209,"mtime":1669660086917,"results":"59","hashOfConfig":"35"},{"size":1271,"mtime":1669660086918,"results":"60","hashOfConfig":"35"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1dxhbal",{"filePath":"63","messages":"64","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},"7xqpaz",{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},"F:\\CodingBootcamp\\Mug-Store\\client\\src\\index.js",["125"],"F:\\CodingBootcamp\\Mug-Store\\client\\src\\App.js",["126"],"F:\\CodingBootcamp\\Mug-Store\\client\\src\\reportWebVitals.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\index.js",["127"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["128","129"],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\reportWebVitals.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\App.js",["130"],"import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n// import background from \"./assets/background.jpg\";\nimport './App.css';\nimport Auth from './utils/auth';\n\nimport { StoreProvider } from './utils/GlobalState';\n\nimport Nav from './components/Nav';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport UserDashboard from './pages/UserDashboard';\nimport Create from './pages/Create';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\nimport About from './pages/About';\nimport Cart from './components/Cart';\n\nimport UpdateUser from './pages/UpdateUser';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n// import UserDashboard from './pages/UserDashboard';\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n        <StoreProvider>\n          <Router>\n            <Nav />\n            {Auth.loggedIn() ? <Cart /> : ''}\n            <Routes>\n              <Route path=\"/\" element={<About />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              <Route path=\"/profile\" element={<UserDashboard />} />\n              <Route path=\"/create\" element={<Create />} />\n              <Route path=\"/success\" element={<Success />} />\n              <Route path=\"/updateuser\" element={<UpdateUser />} />\n              <Route path=\"/orderHistory\" element={<OrderHistory />} />\n            </Routes>\n          </Router>\n        </StoreProvider>\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\utils\\auth.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\utils\\GlobalState.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\pages\\Home.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\pages\\UserDashboard.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\components\\Nav.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\pages\\Signup.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\pages\\Login.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\pages\\Create.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\pages\\UpdateUser.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\pages\\Success.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\pages\\About.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\pages\\OrderHistory.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\utils\\reducers.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\utils\\queries.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\components\\UserInfo.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\components\\PrevOrder.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\components\\Cart\\index.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\utils\\mutations.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\components\\CustomizeProduct.js",["131","132"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_PRODUCT } from \"../utils/mutations\";\nimport { validateCustomText, pluralize } from \"../utils/helpers\";\nimport CustomMug from \"../components/CustomMug\";\nimport { CirclePicker } from \"react-color\";\n\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../utils/actions\";\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction AreProductsSame(product1, product2) {\n  console.log(\"product one:\", product1, \"product two\", product2);\n  if (\n    product1 &&\n    product2 &&\n    product1.mugColor === product2.mugColor &&\n    product1.customizedColor === product2.customizedColor &&\n    product1.customText === product2.customText &&\n    product1.customFont === product2.customFont\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction CustomizeProduct(item) {\n  const [blockPickerColor, setBlockPickerColor] = useState(\"black\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [confirmationMessage, setconfirmationMessage] = useState(\"\");\n\n  const [newProduct, setNewProduct] = useState({\n    mugColor: \"White\",\n    customizedColor: \"\",\n    customText: \"\",\n    customFont: \"Trebuchet MS\",\n    count: \"\",\n  });\n\n  const [addProduct, { error }] = useMutation(ADD_PRODUCT);\n  const [mugText, setMugText] = useState(\"\");\n  const [mugSrc, setMugSrc] = useState(\"\");\n  const [mugFont, setMugFont] = useState(\"\");\n  const [characterCount, setCharacterCount] = useState(0);\n  const [newButton, setNewButton] = useState(\"\");\n\n  const [state, dispatch] = useStoreContext();\n\n  const { cart } = state;\n\n  const addToCart = async (product) => {\n    const itemInCart = cart.find((cartItem) => {\n      return AreProductsSame(cartItem, product);\n    });\n    dispatch({\n      type: ADD_TO_CART,\n      product: { ...product },\n    });\n    idbPromise('cart', 'put', { ...product });\n\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    if (name === \"mugColor\") {\n      setNewProduct({ ...newProduct, [name]: value });\n      setconfirmationMessage(\"\");\n      setMugSrc(value);\n    } else if (name === \"customText\") {\n      if (validateCustomText(value)) {\n        setNewProduct({ ...newProduct, [name]: value });\n        setMugText(value);\n        setCharacterCount(value.length);\n      }\n    } else if (name === \"customFont\") {\n      setNewProduct({ ...newProduct, [name]: value });\n      setMugFont(value);\n    } else if (name === \"count\") {\n      setNewProduct({ ...newProduct, [name]: parseInt(value) });\n    } else {\n      setNewProduct({ ...newProduct, customizedColor: blockPickerColor });\n    }\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    if (\n      !newProduct.customText ||\n      !newProduct.customizedColor ||\n      !newProduct.count\n    ) {\n      setErrorMessage(\n        \"Something is missing. Please review and make sure your custom choices have been selected\"\n      );\n    } else {\n      try {\n        const { data } = await addProduct({\n          variables: { ...newProduct },\n        });\n        setNewButton(\" Create a new mug\");\n        setconfirmationMessage(\n          `${newProduct.count} ${pluralize(\n            \"mug\",\n            newProduct.count\n          )} added to cart.`\n        );\n\n        addToCart(data.addProduct);\n        let mugselector = document.getElementById('mugselector');\n        let fontselector = document.getElementById('fontselector');\n        fontselector.value = 'Trebuchet MS';\n        mugselector.value = 'white';\n        setBlockPickerColor('black');\n        setMugSrc('');\n        setMugFont('Trebuchet MS');\n        setMugText('');\n        setErrorMessage('');\n        setCharacterCount('0');\n        setNewProduct({\n          mugColor: \"white\",\n          customizedColor: \"\",\n          customText: \"\",\n          customFont: \"\",\n          count: \"\",\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n\n  const clearConfirmation = (event) => {\n    event.preventDefault();\n\n    setconfirmationMessage(\"\");\n    setNewButton(\"\");\n  };\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <h3>customize your creation</h3>\n        </div>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-5\">\n            <form onSubmit={handleFormSubmit} autoComplete=\"off\">\n              <div className=\"form-group mt-3\">\n                <label htmlFor=\"exampleFormControlSelect1\">\n                  *Pick your mug color (white/black):\n                </label>\n                <select\n                  className=\"form-control\"\n                  name=\"mugColor\"\n                  id=\"mugselector\"\n                  onChange={handleChange}\n                  defaultValue=\"1\"\n                >\n                  <option value=\"white\">White</option>\n                  <option value=\"black\">Black</option>\n                </select>\n              </div>\n              <div className=\"form-group mt-3\">\n                <label htmlFor=\"exampleInputEmail1\">\n                  *Your custom message:\n                </label>\n                <input\n                  name=\"customText\"\n                  placeholder=\"I love coffee & tea\"\n                  value={newProduct.customText}\n                  type=\"text\"\n                  className={`form-control ${\n                    characterCount === 26 || error ? \"text-danger \" : \"\"\n                  }`}\n                  onChange={handleChange}\n                />\n                <small\n                  className={`d-flex justify-content-end ${\n                    characterCount === 25 || error ? \"text-danger\" : \"\"\n                  }`}\n                >\n                  max character count: {characterCount}/25\n                </small>\n              </div>\n              <div className=\"form-group mt-3\">\n                <label htmlFor=\"exampleInputEmail1\">\n                  *Select a text colour:\n                </label>\n                <CirclePicker\n                  className=\"pt-3 w-100\"\n                  name=\"customizedColor\"\n                  color={blockPickerColor}\n                  onChange={(color) => {\n                    setBlockPickerColor(color.hex);\n                    setNewProduct({\n                      ...newProduct,\n                      customizedColor: color.hex,\n                    });\n                  }}\n                />\n              </div>\n              <div className=\"form-group mt-3\">\n                <label htmlFor=\"exampleInputEmail1\">*Select A Font:</label>\n                <select\n                  id=\"fontselector\"\n                  name=\"customFont\"\n                  className=\"form-control\"\n                  onChange={handleChange}\n                  defaultValue=\"1\"\n                >\n                  <option>Trebuchet MS</option>\n                  <option>Amatic SC</option>\n                  <option>Bungee Outline</option>\n                  <option>Cinzel</option>\n                  <option>Cutive Mono</option>\n                  <option>Eater</option>\n                  <option>Erica One</option>\n                  <option>Manrope</option>\n                  <option>Monoton</option>\n                  <option>Pacifico</option>\n                </select>\n              </div>\n              <div className=\" d-flex flex-row my-2 align-items-end\">\n                <div className=\"form-group mt-3\">\n                  <label htmlFor=\"exampleInputEmail1\">*Select quantity:</label>\n\n                  <input\n                    className=\"form-control\"\n                    placeholder=\"quantity\"\n                    value={newProduct.count}\n                    name=\"count\"\n                    type=\"number\"\n                    min=\"0\"\n                    onChange={handleChange}\n                  ></input>\n                </div>\n                <div>\n                  <button className=\"btn btn-primary mx-2\" type=\"submit\">\n                    add to cart\n                  </button>\n                </div>\n              </div>\n              <div>\n                <p className=\"text-danger font-italic\">{errorMessage}</p>\n                <span>{confirmationMessage}</span>\n                <span\n                  role=\"button\"\n                  className=\"text-primary\"\n                  onClick={clearConfirmation}\n                >\n                  {newButton}\n                </span>\n              </div>\n              {error && (\n                <div className=\"text-danger\">\n                  Something went wrong. To place an order, make sure you are\n                  <Link to=\"/login\"> logged in.</Link>\n                </div>\n              )}\n            </form>\n          </div>\n          <div className=\"col-md-7\">\n            <CustomMug\n              mugText={mugText}\n              mugSrc={mugSrc}\n              color={blockPickerColor}\n              font={mugFont}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CustomizeProduct;\n","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\utils\\helpers.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\utils\\actions.js",[],"D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\components\\CartItem.js",["133","134"],"import React, { useEffect } from \"react\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../utils/actions\"; //import correct mutations\nimport { idbPromise, pluralize } from \"../utils/helpers\";\nimport styled from \"styled-components\";\n\nconst StyledItem = styled.div`\n  border-bottom: 1px solid grey;\n  padding: 1.25rem;\n  line-height: 2rem;\n`;\nconst Remove = styled.span`\n  color: lightgrey;\n  &:hover {\n    color: grey;\n  }\n`;\nconst ItemTitle = styled.span`\n  text-transform: uppercase;\n`;\n\nconst CartItem = ({ item }) => {\n  const color = item.customizedColor;\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = (item) => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id,\n    });\n    idbPromise(\"cart\", \"delete\", { ...item });\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === \"0\") {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id,\n      });\n      idbPromise(\"cart\", \"delete\", { ...item });\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value),\n      });\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: parseInt(value) });\n    }\n  };\n\n  return (\n    <div className=\"flex-row\">\n      <StyledItem key={item._id}>\n        <div className=\"d-flex flex-row justify-content-between\">\n          <ItemTitle>\n            {item.count} {item.mugColor} custom {pluralize(\"mug\", item.count)}\n          </ItemTitle>{\" \"}\n          <Remove\n            role=\"button\"\n            aria-label=\"remove\"\n            onClick={() => removeFromCart(item)}\n          >\n            <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n          </Remove>\n        </div>\n\n        <div className=\"d-flex flex-row\">\n          <div>\n            custom text:{\" \"}\n            <span style={{ color: color, fontStyle: \"italic\" }}>\n              {item.customText}\n            </span>\n          </div>\n        </div>\n\n        <div className=\"d-flex justify-content-end\">\n          <p>order total: $ {item.price}</p>\n        </div>\n      </StyledItem>\n    </div>\n  );\n};\n\nexport default CartItem;\n","D:\\Dropbox\\Coding Bootcamp\\Locally saved Bootcamp material\\Projects\\Mug-Store\\client\\src\\components\\CustomMug.js",["135","136"],"import React, { useState, useEffect } from \"react\";\nimport \"./TextOverlay.css\";\nimport WhiteMug from \"../assets/whitemug.jpg\";\nimport BlackMug from \"../assets/blackmug.jpg\";\nimport styled from \"styled-components\";\n\nconst Overlay = styled\nconst StyledOverlay = styled.p`\n  display: inline-block;\n  flex-wrap: wrap;\n  font-size: 2.7rem;\n  word-wrap: break-word;\n  text-align: center;\n  max-width: 400px;\n  position: absolute;\n  margin-bottom: 0px;\n  top: 25%;\n  left: 40%;\n  width: 40%;\n  line-height: 1.2em;\n\n  @media only screen and (max-width: 450px) {\n    font-size: 2.1rem;\n  }\n`;\n\nfunction CustomMug({ mugText, mugSrc, color, font }) {\n  const [mugcolour, setMugColour] = useState(WhiteMug);\n  useEffect(() => {\n    if (mugSrc === \"black\") {\n      setMugColour(BlackMug);\n    } else {\n      setMugColour(WhiteMug);\n    }\n  });\n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <div className=\"image-container\">\n        <img\n          className=\"ui image align-middle\"\n          src={mugcolour}\n          alt=\"custom mug with text\"\n        />\n        <div>\n          <StyledOverlay style={{ color: color, fontFamily: font }}>\n            {mugText}\n          </StyledOverlay>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CustomMug;\n",{"ruleId":"137","severity":1,"message":"138","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":23},{"ruleId":null,"fatal":true,"severity":2,"message":"141","line":11,"column":2},{"ruleId":"137","severity":1,"message":"138","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":23},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"137","severity":1,"message":"146","line":17,"column":8,"nodeType":"139","messageId":"140","endLine":17,"endColumn":12},{"ruleId":"137","severity":1,"message":"147","line":10,"column":23,"nodeType":"139","messageId":"140","endLine":10,"endColumn":43},{"ruleId":"137","severity":1,"message":"148","line":54,"column":11,"nodeType":"139","messageId":"140","endLine":54,"endColumn":21},{"ruleId":"137","severity":1,"message":"149","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":26},{"ruleId":"137","severity":1,"message":"150","line":34,"column":9,"nodeType":"139","messageId":"140","endLine":34,"endColumn":17},{"ruleId":"137","severity":1,"message":"151","line":7,"column":7,"nodeType":"139","messageId":"140","endLine":7,"endColumn":14},{"ruleId":"152","severity":1,"message":"153","line":29,"column":3,"nodeType":"139","endLine":29,"endColumn":12,"suggestions":"154"},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m  9 |\u001b[39m \u001b[36mimport\u001b[39m { setContext } \u001b[36mfrom\u001b[39m \u001b[32m'@apollo/client/link/context'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 10 |\u001b[39m \u001b[90m// import background from \"./assets/background.jpg\";\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 11 |\u001b[39m \u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mHEAD\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    |\u001b[39m  \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 12 |\u001b[39m \u001b[36mimport\u001b[39m \u001b[32m\"./App.css\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 13 |\u001b[39m \u001b[33m===\u001b[39m\u001b[33m===\u001b[39m\u001b[33m=\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 14 |\u001b[39m \u001b[36mimport\u001b[39m \u001b[33mAuth\u001b[39m \u001b[36mfrom\u001b[39m \u001b[32m\"./utils/auth\"\u001b[39m\u001b[33m;\u001b[39m\u001b[0m","no-native-reassign",["155"],"no-negated-in-lhs",["156"],"'Home' is defined but never used.","'UPDATE_CART_QUANTITY' is defined but never used.","'itemInCart' is assigned a value but never used.","'useEffect' is defined but never used.","'onChange' is assigned a value but never used.","'Overlay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setMugColour'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [mugSrc] as a second argument to the useEffect Hook.",["157"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},"Add dependencies array: [mugSrc]",{"range":"160","text":"161"},[828,828],", [mugSrc]"]