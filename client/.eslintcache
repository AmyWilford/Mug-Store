[{"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/index.js":"1","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/reportWebVitals.js":"2","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/App.js":"3","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/components/Nav.js":"4","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/utils/GlobalState.js":"5","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/pages/Home.js":"6","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/pages/Create.js":"7","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/pages/UserDashboard.js":"8","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/pages/Signup.js":"9","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/pages/About.js":"10","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/pages/OrderHistory.js":"11","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/pages/Success.js":"12","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/pages/Login.js":"13","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/pages/UpdateUser.js":"14","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/components/Cart/index.js":"15","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/utils/auth.js":"16","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/utils/queries.js":"17","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/utils/reducers.js":"18","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/components/PrevOrder.js":"19","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/utils/helpers.js":"20","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/utils/mutations.js":"21","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/components/CustomizeProduct.js":"22","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/components/UserInfo.js":"23","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/utils/actions.js":"24","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/components/CartItem.js":"25","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/components/CustomMug.js":"26"},{"size":551,"mtime":1669651979871,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1669227665216,"results":"29","hashOfConfig":"28"},{"size":2184,"mtime":1669658497720,"results":"30","hashOfConfig":"28"},{"size":2368,"mtime":1669658328975,"results":"31","hashOfConfig":"28"},{"size":521,"mtime":1669651979873,"results":"32","hashOfConfig":"28"},{"size":666,"mtime":1669651979871,"results":"33","hashOfConfig":"28"},{"size":424,"mtime":1669651979871,"results":"34","hashOfConfig":"28"},{"size":1582,"mtime":1669651979873,"results":"35","hashOfConfig":"28"},{"size":4771,"mtime":1669651979872,"results":"36","hashOfConfig":"28"},{"size":1937,"mtime":1669658145035,"results":"37","hashOfConfig":"28"},{"size":1430,"mtime":1669651979872,"results":"38","hashOfConfig":"28"},{"size":1401,"mtime":1669651979873,"results":"39","hashOfConfig":"28"},{"size":2202,"mtime":1669651979871,"results":"40","hashOfConfig":"28"},{"size":5612,"mtime":1669651979873,"results":"41","hashOfConfig":"28"},{"size":2771,"mtime":1669657999402,"results":"42","hashOfConfig":"28"},{"size":1405,"mtime":1669651979874,"results":"43","hashOfConfig":"28"},{"size":971,"mtime":1669651979874,"results":"44","hashOfConfig":"28"},{"size":1521,"mtime":1669651979875,"results":"45","hashOfConfig":"28"},{"size":1198,"mtime":1669652092480,"results":"46","hashOfConfig":"28"},{"size":2129,"mtime":1669651979874,"results":"47","hashOfConfig":"28"},{"size":1994,"mtime":1669651979874,"results":"48","hashOfConfig":"28"},{"size":9893,"mtime":1669658045888,"results":"49","hashOfConfig":"28"},{"size":997,"mtime":1669652092480,"results":"50","hashOfConfig":"28"},{"size":468,"mtime":1669651979874,"results":"51","hashOfConfig":"28"},{"size":2209,"mtime":1669657908300,"results":"52","hashOfConfig":"28"},{"size":1271,"mtime":1669659632008,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},"1k8wn3j",{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"57"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"57"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"57"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"57"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/index.js",["113"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["114","115"],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/reportWebVitals.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/App.js",["116","117"],"import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n// import background from \"./assets/background.jpg\";\nimport Auth from \"./utils/auth\";\n\nimport { StoreProvider } from \"./utils/GlobalState\";\n\nimport Nav from \"./components/Nav\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport UserDashboard from \"./pages/UserDashboard\";\nimport Create from \"./pages/Create\";\nimport Success from \"./pages/Success\";\nimport OrderHistory from \"./pages/OrderHistory\";\nimport About from \"./pages/About\";\nimport Cart from \"./components/Cart\";\n\nimport UpdateUser from \"./pages/UpdateUser\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n// import UserDashboard from './pages/UserDashboard';\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n        <StoreProvider>\n          <Router>\n            <Nav />\n            {Auth.loggedIn() ? <Cart /> : \"\"}\n            <Routes>\n              <Route path=\"/\" element={<Home />} />\n              <Route path=\"/login\" element={<Login />} />\n              <Route path=\"/signup\" element={<Signup />} />\n              <Route path=\"/profile\" element={<UserDashboard />} />\n              <Route path=\"/create\" element={<Create />} />\n              <Route path=\"/success\" element={<Success />} />\n              <Route path=\"/updateuser\" element={<UpdateUser />} />\n\n              {/*<Route \n\n              {/*  <Route \n        path=\"/orderHistory\" \n        element={<OrderHistory />} \n      /> */}\n            </Routes>\n          </Router>\n        </StoreProvider>\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/components/Nav.js",["118"],"import React from \"react\";\nimport Auth from \"../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport Cart from \"./Cart\";\n\nfunction Nav() {\n  function showNavigation() {\n    return (\n      <nav className=\"navbar navbar-expand-sm  navbar-light bg-light \">\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse \" id=\"navbarNav\">\n          <ul className=\"navbar-nav mr-auto\">\n            {Auth.loggedIn() ? (\n              <>\n                <li className=\"nav-item\">\n                  <button\n                    className=\"btn btn-lg btn-outline-danger\"\n                    type=\"button\"\n                    href=\"/\"\n                    onClick={() => Auth.logout()}\n                  >\n                    Log out\n                  </button>\n                </li>\n              </>\n            ) : (\n              <>\n                <li className=\"nav-item\">\n                  <Link to=\"/signup\" className=\"nav-link\">\n                    <button\n                      className=\"btn btn-lg btn-outline-secondary\"\n                      type=\"button\"\n                    >\n                      Sign up\n                    </button>{\" \"}\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to=\"/login\" className=\"nav-link\">\n                    <button\n                      className=\"btn btn-lg btn-outline-success\"\n                      type=\"button\"\n                    >\n                      Login\n                    </button>{\" \"}\n                  </Link>\n                </li>\n              </>\n            )}\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n\n  return (\n    <header>\n      <nav className=\"navbar m-auto navbar-expand-lg shadow  navbar-light bg-light \">\n        <Link to=\"/\">\n          <img\n            className=\"animate__bounceIn \"\n            src=\"./assets/images/logo.png\"\n            alt=\"logo\"\n            height=\"80px\"\n          />\n        </Link>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/utils/GlobalState.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/pages/Home.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/pages/Create.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/pages/UserDashboard.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/pages/Signup.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/pages/About.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/pages/OrderHistory.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/pages/Success.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/pages/Login.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/pages/UpdateUser.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/components/Cart/index.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/utils/auth.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/utils/queries.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/utils/reducers.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/components/PrevOrder.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/utils/helpers.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/utils/mutations.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/components/CustomizeProduct.js",["119","120","121"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_PRODUCT } from \"../utils/mutations\";\nimport { validateCustomText, pluralize } from \"../utils/helpers\";\nimport CustomMug from \"../components/CustomMug\";\nimport { CirclePicker } from \"react-color\";\n\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../utils/actions\";\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction AreProductsSame(product1, product2) {\n  console.log(\"product one:\", product1, \"product two\", product2);\n  if (\n    product1 &&\n    product2 &&\n    product1.mugColor === product2.mugColor &&\n    product1.customizedColor === product2.customizedColor &&\n    product1.customText === product2.customText &&\n    product1.customFont === product2.customFont\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction CustomizeProduct(item) {\n  const [blockPickerColor, setBlockPickerColor] = useState(\"black\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [confirmationMessage, setconfirmationMessage] = useState(\"\");\n\n  const [newProduct, setNewProduct] = useState({\n    mugColor: \"White\",\n    customizedColor: \"\",\n    customText: \"\",\n    customFont: \"Trebuchet MS\",\n    count: \"\",\n  });\n\n  const [addProduct, { error }] = useMutation(ADD_PRODUCT);\n  const [mugText, setMugText] = useState(\"\");\n  const [mugSrc, setMugSrc] = useState(\"\");\n  const [mugFont, setMugFont] = useState(\"\");\n  const [characterCount, setCharacterCount] = useState(0);\n  const [newButton, setNewButton] = useState(\"\");\n\n  const [state, dispatch] = useStoreContext();\n\n  const { cart } = state;\n\n  const addToCart = async (product) => {\n    const itemInCart = cart.find((cartItem) => {\n      return AreProductsSame(cartItem, product);\n    });\n    dispatch({\n      type: ADD_TO_CART,\n      product: { ...newProduct },\n    });\n    idbPromise(\"cart\", \"put\", { ...newProduct });\n    // console.log(product);\n    // if (itemInCart) {\n    //   dispatch({\n    //     products: [\n    //       {\n    //         type: UPDATE_CART_QUANTITY,\n    //         _id: itemInCart._id,\n    //         count: parseInt(itemInCart.count) + product.count,\n    //       },\n    //     ],\n    //   });\n    //   idbPromise(\"cart\", \"put\", {\n    //     products: [\n    //       {\n    //         ...itemInCart,\n    //         count: parseInt(itemInCart.count) + product.count,\n    //       },\n    //     ],\n    //   });\n    // } else {\n    //   dispatch({\n    //     products: [\n    //       {\n    //         type: ADD_TO_CART,\n    //         product: { ...product },\n    //       },\n    //     ],\n    //   });\n    //   idbPromise(\"cart\", \"put\", { products: [{ ...product }] });\n    // }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    if (name === \"mugColor\") {\n      setNewProduct({ ...newProduct, [name]: value });\n      setconfirmationMessage(\"\");\n      setMugSrc(value);\n    } else if (name === \"customText\") {\n      if (validateCustomText(value)) {\n        setNewProduct({ ...newProduct, [name]: value });\n        setMugText(value);\n        setCharacterCount(value.length);\n      }\n    } else if (name === \"customFont\") {\n      setNewProduct({ ...newProduct, [name]: value });\n      setMugFont(value);\n    } else if (name === \"count\") {\n      setNewProduct({ ...newProduct, [name]: parseInt(value) });\n    } else {\n      setNewProduct({ ...newProduct, customizedColor: blockPickerColor });\n    }\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    if (\n      !newProduct.customText ||\n      !newProduct.customizedColor ||\n      !newProduct.count\n    ) {\n      setErrorMessage(\n        \"Something is missing. Please review and make sure your custom choices have been selected\"\n      );\n    } else {\n      try {\n        const { data } = await addProduct({\n          variables: { ...newProduct },\n        });\n        setNewButton(\" Create a new mug\");\n        setconfirmationMessage(\n          `${newProduct.count} ${pluralize(\n            \"mug\",\n            newProduct.count\n          )} added to cart.`\n        );\n        addToCart(newProduct);\n        let mugselector = document.getElementById(\"mugselector\");\n        let fontselector = document.getElementById(\"fontselector\");\n        fontselector.value = \"Trebuchet MS\";\n        mugselector.value = \"white\";\n        setBlockPickerColor(\"black\");\n        setMugSrc(\"\");\n        setMugFont(\"Trebuchet MS\");\n        setMugText(\"\");\n        setErrorMessage(\"\");\n        setCharacterCount(\"0\");\n        setNewProduct({\n          mugColor: \"white\",\n          customizedColor: \"\",\n          customText: \"\",\n          customFont: \"\",\n          count: \"\",\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n\n  const clearConfirmation = (event) => {\n    event.preventDefault();\n\n    setconfirmationMessage(\"\");\n    setNewButton(\"\");\n  };\n  return (\n    <div>\n      <div className=\"container\">\n        <div className=\"row\">\n          <h3>customize your creation</h3>\n        </div>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-5\">\n            <form onSubmit={handleFormSubmit} autoComplete=\"off\">\n              <div className=\"form-group mt-3\">\n                <label htmlFor=\"exampleFormControlSelect1\">\n                  *Pick your mug color (white/black):\n                </label>\n                <select\n                  className=\"form-control\"\n                  name=\"mugColor\"\n                  id=\"mugselector\"\n                  onChange={handleChange}\n                  defaultValue=\"1\"\n                >\n                  <option value=\"white\">White</option>\n                  <option value=\"black\">Black</option>\n                </select>\n              </div>\n              <div className=\"form-group mt-3\">\n                <label htmlFor=\"exampleInputEmail1\">\n                  *Your custom message:\n                </label>\n                <input\n                  name=\"customText\"\n                  placeholder=\"I love coffee & tea\"\n                  value={newProduct.customText}\n                  type=\"text\"\n                  className={`form-control ${\n                    characterCount === 26 || error ? \"text-danger \" : \"\"\n                  }`}\n                  onChange={handleChange}\n                />\n                <small\n                  className={`d-flex justify-content-end ${\n                    characterCount === 25 || error ? \"text-danger\" : \"\"\n                  }`}\n                >\n                  max character count: {characterCount}/25\n                </small>\n              </div>\n              <div className=\"form-group mt-3\">\n                <label htmlFor=\"exampleInputEmail1\">\n                  *Select a text colour:\n                </label>\n                <CirclePicker\n                  className=\"pt-3 w-100\"\n                  name=\"customizedColor\"\n                  color={blockPickerColor}\n                  onChange={(color) => {\n                    setBlockPickerColor(color.hex);\n                    setNewProduct({\n                      ...newProduct,\n                      customizedColor: color.hex,\n                    });\n                  }}\n                />\n              </div>\n              <div className=\"form-group mt-3\">\n                <label htmlFor=\"exampleInputEmail1\">*Select A Font:</label>\n                <select\n                  id=\"fontselector\"\n                  name=\"customFont\"\n                  className=\"form-control\"\n                  onChange={handleChange}\n                  defaultValue=\"1\"\n                >\n                  <option>Trebuchet MS</option>\n                  <option>Amatic SC</option>\n                  <option>Bungee Outline</option>\n                  <option>Cinzel</option>\n                  <option>Cutive Mono</option>\n                  <option>Eater</option>\n                  <option>Erica One</option>\n                  <option>Manrope</option>\n                  <option>Monoton</option>\n                  <option>Pacifico</option>\n                </select>\n              </div>\n              <div className=\" d-flex flex-row my-2 align-items-end\">\n                <div className=\"form-group mt-3\">\n                  <label htmlFor=\"exampleInputEmail1\">*Select quantity:</label>\n\n                  <input\n                    className=\"form-control\"\n                    placeholder=\"quantity\"\n                    value={newProduct.count}\n                    name=\"count\"\n                    type=\"number\"\n                    min=\"0\"\n                    onChange={handleChange}\n                  ></input>\n                </div>\n                <div>\n                  <button className=\"btn btn-primary mx-2\" type=\"submit\">\n                    add to cart\n                  </button>\n                </div>\n              </div>\n              <div>\n                <p className=\"text-danger font-italic\">{errorMessage}</p>\n                <span>{confirmationMessage}</span>\n                <span\n                  role=\"button\"\n                  className=\"text-primary\"\n                  onClick={clearConfirmation}\n                >\n                  {newButton}\n                </span>\n              </div>\n              {error && (\n                <div className=\"text-danger\">\n                  Something went wrong. To place an order, make sure you are\n                  <Link to=\"/login\"> logged in.</Link>\n                </div>\n              )}\n            </form>\n          </div>\n          <div className=\"col-md-7\">\n            <CustomMug\n              mugText={mugText}\n              mugSrc={mugSrc}\n              color={blockPickerColor}\n              font={mugFont}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CustomizeProduct;\n","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/components/UserInfo.js",["122"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import Auth from \"../utils/auth\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_USER } from \"../utils/queries\";\nfunction UserInfo() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n  if (data) {\n    user = data.user;\n  }\n  return (\n    <>\n      {user ? (\n        <>\n          <h2>{user.firstName}'s dashboard</h2>\n          <h3>Email Address</h3>\n          <p>{user.email}</p>\n          <h3>Shipping Address</h3>\n          <p> {user.address}</p>\n          <p>{user.city}</p>\n          <p>{user.province}</p>\n          <p>{user.country}</p>\n        <Link to=\"/updateuser\">  <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            >\n            Edit user details\n          </button></Link>\n        </>\n      ) : (\n        <Link to=\"/login\">\n          <p>Click here to login and see your details</p>\n        </Link>\n      )}\n      </>\n  );\n}\nexport default UserInfo;\n","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/utils/actions.js",[],"/Users/amywilford/bootcamp/all-projects/mugstore/client/src/components/CartItem.js",["123","124"],"import React, { useEffect } from \"react\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../utils/actions\"; //import correct mutations\nimport { idbPromise, pluralize } from \"../utils/helpers\";\nimport styled from \"styled-components\";\n\nconst StyledItem = styled.div`\n  border-bottom: 1px solid grey;\n  padding: 1.25rem;\n  line-height: 2rem;\n`;\nconst Remove = styled.span`\n  color: lightgrey;\n  &:hover {\n    color: grey;\n  }\n`;\nconst ItemTitle = styled.span`\n  text-transform: uppercase;\n`;\n\nconst CartItem = ({ item }) => {\n  const color = item.customizedColor;\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = (item) => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id,\n    });\n    idbPromise(\"cart\", \"delete\", { ...item });\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === \"0\") {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id,\n      });\n      idbPromise(\"cart\", \"delete\", { ...item });\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value),\n      });\n      idbPromise(\"cart\", \"put\", { ...item, purchaseQuantity: parseInt(value) });\n    }\n  };\n\n  return (\n    <div className=\"flex-row\">\n      <StyledItem key={item._id}>\n        <div className=\"d-flex flex-row justify-content-between\">\n          <ItemTitle>\n            {item.count} {item.mugColor} custom {pluralize(\"mug\", item.count)}\n          </ItemTitle>{\" \"}\n          <Remove\n            role=\"button\"\n            aria-label=\"remove\"\n            onClick={() => removeFromCart(item)}\n          >\n            <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n          </Remove>\n        </div>\n\n        <div className=\"d-flex flex-row\">\n          <div>\n            custom text:{\" \"}\n            <span style={{ color: color, fontStyle: \"italic\" }}>\n              {item.customText}\n            </span>\n          </div>\n        </div>\n\n        <div className=\"d-flex justify-content-end\">\n          <p>order total: $ {item.price}</p>\n        </div>\n      </StyledItem>\n    </div>\n  );\n};\n\nexport default CartItem;\n","/Users/amywilford/bootcamp/all-projects/mugstore/client/src/components/CustomMug.js",["125","126"],{"ruleId":"127","severity":1,"message":"128","line":5,"column":8,"nodeType":"129","messageId":"130","endLine":5,"endColumn":23},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"127","severity":1,"message":"135","line":22,"column":8,"nodeType":"129","messageId":"130","endLine":22,"endColumn":20},{"ruleId":"127","severity":1,"message":"136","line":23,"column":8,"nodeType":"129","messageId":"130","endLine":23,"endColumn":13},{"ruleId":"127","severity":1,"message":"137","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":12},{"ruleId":"127","severity":1,"message":"138","line":10,"column":23,"nodeType":"129","messageId":"130","endLine":10,"endColumn":43},{"ruleId":"127","severity":1,"message":"139","line":54,"column":11,"nodeType":"129","messageId":"130","endLine":54,"endColumn":21},{"ruleId":"127","severity":1,"message":"140","line":128,"column":17,"nodeType":"129","messageId":"130","endLine":128,"endColumn":21},{"ruleId":"127","severity":1,"message":"141","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"142","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"127","severity":1,"message":"143","line":34,"column":9,"nodeType":"129","messageId":"130","endLine":34,"endColumn":17},{"ruleId":"127","severity":1,"message":"144","line":7,"column":7,"nodeType":"129","messageId":"130","endLine":7,"endColumn":14},{"ruleId":"145","severity":1,"message":"146","line":29,"column":3,"nodeType":"129","endLine":29,"endColumn":12,"suggestions":"147"},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["148"],"no-negated-in-lhs",["149"],"'OrderHistory' is defined but never used.","'About' is defined but never used.","'Cart' is defined but never used.","'UPDATE_CART_QUANTITY' is defined but never used.","'itemInCart' is assigned a value but never used.","'data' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'onChange' is assigned a value but never used.","'Overlay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setMugColour'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [mugSrc] as a second argument to the useEffect Hook.",["150"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},"Add dependencies array: [mugSrc]",{"range":"153","text":"154"},[828,828],", [mugSrc]"]